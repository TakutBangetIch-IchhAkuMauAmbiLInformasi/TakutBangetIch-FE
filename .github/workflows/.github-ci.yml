name: Docker Build & Deploy

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: yosefnuragaw/fetk:latest
  NEXT_PUBLIC_API_URL: https://takutbangetich-be-production.up.railway.app
  NEXT_PUBLIC_SEARCH_ENGINE_URL:  https://takutbangetich-be-production.up.railway.app
  DOCKER_PASSWORD: 6mWc742W0SPXju0nC0vmvL6MK2w
  DOCKER_USERNAME: yosefnuragaw

jobs:
  docker-build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: github.ref_name == 'main'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          echo "Building Docker image with NEXT_PUBLIC_SEARCH_ENGINE_URL=${{ env.NEXT_PUBLIC_SEARCH_ENGINE_URL }}"
          docker build \
            --build-arg NEXT_PUBLIC_SEARCH_ENGINE_URL="${{ env.NEXT_PUBLIC_SEARCH_ENGINE_URL }}" \
            -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  deploy-staging:
    name: Deploy to Staging Server
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref_name == 'main'
    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY_STAGING }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.DEPLOY_HOST_STAGING }}" >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER_STAGING }}@${{ secrets.DEPLOY_HOST_STAGING }} << 'EOF'
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker pull ${{ env.IMAGE_NAME }}
            docker stop nextjs-app || true
            docker rm nextjs-app || true
            docker run -d --restart always --name nextjs-app \
              -p 80:80 -p 3000:3000 \
              -e NEXT_PUBLIC_SEARCH_ENGINE_URL="${{ env.NEXT_PUBLIC_SEARCH_ENGINE_URL }}" \
              ${{ env.IMAGE_NAME }}
          EOF
